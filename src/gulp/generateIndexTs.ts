import * as fs from 'fs';
import * as glob from 'glob';
import * as gulp from 'gulp';

// -------------------------------------------------------------------------
// Create / Update index.ts
// -------------------------------------------------------------------------

/**
 * Generate index.ts declaration
 */
gulp.task('generateIndexTs', () => {
  const _glob = glob.sync('src/**').filter((f: string) => /\.ts$/.test(f) && !/^(src\/packages|src\/index\.ts$)/.test(f));
  const forIndexTs: string[] = ['// ---- Generated by gulp taskRef ----'];
  let settings: any = {};
  if (fs.existsSync('./.typexs.json')) {
    settings = require('./.typexs.json');
    if (settings.packageExports) {
      settings.packageExports.forEach((f: string) => {
        forIndexTs.push(`export * from "${f}";`);
      });
    }
  }
  _glob.forEach((f: string) => {
    if (!/\/\/ index\.ts ignore/.test(fs.readFileSync(f).toString('utf-8'))) {
      forIndexTs.push(`export * from "./${f.replace(/(^src\/)|((\.d)?\.ts$)/g, '')}";`);
    }
  });
  fs.writeFileSync('./src/index.ts', forIndexTs.join('\n'));
  return;
});


